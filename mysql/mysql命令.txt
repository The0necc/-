

mysql初始化：
	mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql/data

查看mysql进程：
	ps- ef |grep mysqld

查看mysql线程：
	top -H -p mysql进程号
	ps -T -p mysql进程号

启动/停止：
	systemctl start/restart/stop/status mysqld
	service mysqld start/restart/stop/status
	
连接：
	mysql -hlocalhost -uroot -proot@123 -P3306
	mysql -uroot -proot@123 -S /tmp/mysql.sock	

查看当前用户：
	select host,user,authentication_string from mysql.user;
	
查看连接线程：
	show processlist;

查看库属性：
	show create database mysql;

查看表属性(结构)：
	show create table mysql.user;
	desc mysql.user;
	
创建一个无密码的用户
	create user kobe@'192.168.16.%';

用户创建密码
	mysqladmin -ukobe -p password 123;
	
创建用户：
	create user admin@'192.168.16.%' identified by 'admin@123';

用户修改密码
	alter user kobe@'192.168.16.%' identified by 'kobe@123'

创建用户并授权
	grant all on *.* to admin@'%' identified by 'admin@123'; 
	
创建超级管理用用户并授权
	grant all on *.* to admin@'localhost' indentified by 'admin@123' with grant option;
	
查看用户权限
	show grants for user@'%';
	
回收权限
	revoke all(权限) on *.* from user@'%';

回收管理员权限
	revoke grant option on *.* from user@'%';
	
mysql执行命令：
	mysql>system ls -al /tmp
	
忘记root密码：
	./mysqld_safe --skip-grant-tables --skip-networking &  # 启动时禁止权限表加载，关闭网路访问。
	
刷新数据库:
	flush privileges;
	
查看mysql配置文件读取顺序
	mysqld --help  --verbose |grep my.cnf
	
DDL语言:数据定义语言
	数据库操作：
		创建数据库：create database school charset=utf8mb4;
		删除数据库：drop databses school;
		修改数据库：alter database school charset=utf8;
		
	表操作
		创建表：
			create table `sch`.`stu6`(
			id int not null primary key auto_increment comment '学号',
			sname varchar(64) not null comment '姓名',
			age tinyint unsigned not null  comment '年龄',
			gender enum('男','女') not null comment '性别',
			intime datetime not null comment '入学时间'

			) engine=innodb charset=utf8mb4;

			一般给写字段信息的时候顺序是:
				数据类型 约束 其他属性
				注意:
					1.在tinyint和int的时候，unsigned要在not null前面
					2.最后一个字段的分号不写
			
			create table stu1 like stu； # 通过stu表创建一个一样的stu1表。
			将show create table stu;里面的信息拿出来执行一次也可以。
			
		修改表信息：
			1.添加手机号码
				alter table stu add telnum char(11)  not null unique key default 0 comment '手机号码'；
			2.添加地址在手机号码之后
				alter table stu add addres varchar(64) not null default 0 comment '家庭地址' after telnum;
			3.添加qq在第一列
				alter table stu addq qq varchar(20) not null unique key default '0' comment 'qq号码' first; 
				
		删除表字段信息：
			alter table stu drop aa;
			
		修改表字段信息：
			change是字段的名字和属性都可以修改
				1.修改gender修改成sex
					alter table stu change gender sex char(2) not null default '男' comment '性别';
			
			modify是只能修改属性
				1.将address的varchar修改成char属性
					alter table stu modify address char(64) not null default 0 comment '地址';
		
		删除表：
		drop table stu;
		
		注意：
			使用alter的时候，一定会有锁表的情况，一定要在业务不繁忙的时候进行表的修改。查询是可以的，但是不能修改数据
			可以使用pt-osc工具来进行在线变更。mysql8.0版本以后就不会有这样的情况。
	
DCL语言:数据库控制语言	
	grant:授权
	revoke:回收权限

DML语言:数据库操作语言
	基本上都是对表的数据行进行操作。
	插入语句：
		单行录入
			insert into stu(id,name,age,sex,intime) values(1,'kobe',23,'男',NOW());
		多行录入
			insert into stu(id,sname,age,sex,intime) values
			(2,'admin',23,'女',NOW()),
			(3,'jordan',24,'男',NOW());
		其他方式
			insert into stu values(4,'t-mac',1,'男',NOW());
			insert into stu(name,age) values('james',23);
			
		赋值内容录入：
			insert into stu1 select * from stu;

	更新语句:
		update stu set age=20;  # 不加where条件，整个表的全部数据都会修改
		update stu set sname='jordan god' where id==3;  # 必须加where条件进行约束
		使用set关键字
		
	删除语句:
		按条件删除
			delete from stu where id=5;
		全表删除
			delete from stu1;
			truncate table stu1;
			
		delete: 可以理解为rm命令
			DML操作, 是逻辑性质删除,逐行进行删除,速度慢.使用delete越多，就会产生越多的磁盘碎片。
			在物理层将区里面的页的数据逐行删除。不会立即清除磁盘空间。只是标记上了删除的状态。是逻辑删除
		truncate: 可以理解为dd命令
			DDL操作,对与表段中的数据页进行清空,速度快.
			在物理层将段里面的区都清空。会立即释放。
	伪删除操作：
		一般通过一个字段进行标注，比如设置一个状态列
		alter table stu add status varchar(5) not null default 'True' comment '状态';
		通过update来代替delete，将状态设置为Flase，在查询的时候，就查询状态为True的行
		删除操作：update stu set where id=3；
	查询操作：select * from stu where status='False';
	
DQL语言(必须精通):数据库查询语言
	1.select语句的执行顺序
		select 
			id,name(列) 
		from
			表
		where
			条件
		group by
			条件
		having
			条件(后过滤group by)
		desc
		limit
		从上到下依次执行

	2.select单独使用
		查询参数值：
			select@@port;  # 查询端口
			select@@basedir; # 查询mysql安装路径
			select@@datadur; # 查询数据存放路径
			select@@socket;  # 查询socket
			select@@server_id; # 查询mysql id
			select@@innodb_flush_log_at_trx_commit; # log日志实时写，实时刷
		select函数
			select NOW(); # 查询当前时间
			SELECT DATABASE(); # 查询当前数据库
			SELECT USER(); # 查询当前用户
			SELECT CONCAT("hello world"); # 拼接
			SELECT CONCAT(USER,"@","'",HOST,",") FROM mysql.user;
			SELECT GROUP_CONCAT(USER,"@",HOST) FROM mysql.user; # 拼接，分组
			https://dev.mysql.com/doc/refman/5.7/en/func-op-summary-ref.html?tdsourcetag=s_pcqq_aiomsg

	3.配合from
		select * from world;

	4.配合where
		select * from world where id=1000;
		# between and 按照范围
		select * form world.city where id between 1 and 100; 
		# and或者or 
		select * from world,city where countrycode='CHN' and population>5000000;
		# 使用比较操作符> < >= <= <>
		select * from world.city where population<330;
		# in语句
		select * from world.city where countrycode in ('CHN','USA');
		# 模糊查询
		select * from world.city where countrycode='CHN' and district LIKE "guang%";
			注意:%不能放在前面,因为不走索引,优化禁止的。


查询参数语句：
	SHOW VARIABLES LIKE '%trx%';  %相当于是*，进行模糊匹配 VARIABLES：参数
	mysql参数大概有五百多个，常用的大概一百多个。
	
如何了解业务？
	1.找到er图和数据字典关系(desc的信息)  第一天上班任务：将每张表上的列加上注释。可以连接业务详情。
	
mysql要学的
	数据库建模工具：
		https://blog.csdn.net/lianchangshuai/article/details/9991349
	pt-osc
		可以使用pt-osc工具(percona-toolkit online schema change)来进行在线变更。实现原理重点
	










































	
	
	

