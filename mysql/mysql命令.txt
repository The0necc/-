

mysql初始化：
	mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql/data

查看mysql进程：
	ps- ef |grep mysqld

查看mysql线程：
	top -H -p mysql进程号
	ps -T -p mysql进程号

启动/停止：
	systemctl start/restart/stop/status mysqld
	service mysqld start/restart/stop/status
	
连接：
	mysql -hlocalhost -uroot -proot@123 -P3306
	mysql -uroot -proot@123 -S /tmp/mysql.sock	

查看当前用户：
	select host,user,authentication_string from mysql.user;
	
查看连接线程：
	show processlist;

查看库属性：
	show create database mysql;

查看表属性(结构)：
	show create table mysql.user;
	desc mysql.user;
	
创建一个无密码的用户
	create user kobe@'192.168.16.%';

用户创建密码
	mysqladmin -ukobe -p password 123;
	
创建用户：
	create user admin@'192.168.16.%' identified by 'admin@123';

用户修改密码
	alter user kobe@'192.168.16.%' identified by 'kobe@123'

创建用户并授权
	grant all on *.* to admin@'%' identified by 'admin@123'; 
	
创建超级管理用用户并授权
	grant all on *.* to admin@'localhost' indentified by 'admin@123' with grant option;
	
查看用户权限
	show grants for user@'%';
	
回收权限
	revoke all(权限) on *.* from user@'%';

回收管理员权限
	revoke grant option on *.* from user@'%';
	
mysql执行命令：
	mysql>system ls -al /tmp
	
忘记root密码：
	./mysqld_safe --skip-grant-tables --skip-networking &  # 启动时禁止权限表加载，关闭网路访问。
	
刷新数据库:
	flush privileges;
	
查看mysql配置文件读取顺序
	mysqld --help  --verbose |grep my.cnf
	
查询参数语句：
	SHOW VARIABLES LIKE '%trx%';  %相当于是*，进行模糊匹配 VARIABLES：参数
	mysql参数大概有五百多个，常用的大概一百多个。
	
select使用
	查询参数值：
		select@@sql_mode;# 查看sql_mode模式参数
		select@@port;  # 查询端口
		select@@basedir; # 查询mysql安装路径
		select@@datadur; # 查询数据存放路径
		select@@socket;  # 查询socket
		select@@server_id; # 查询mysql id
		select@@innodb_flush_log_at_trx_commit; # log日志实时写，实时刷
	select函数
    	select NOW(); # 查询当前时间
        SELECT DATABASE(); # 查询当前数据库
        SELECT USER(); # 查询当前用户
        SELECT CONCAT("hello world"); # 拼接
        SELECT CONCAT(USER,"@","'",HOST,",") FROM mysql.user;
        SELECT GROUP_CONCAT(USER,"@",HOST) FROM mysql.user; # 拼接，分组
        https://dev.mysql.com/doc/refman/5.7/en/func-op-summary-ref.html?

show语句：
	show语句一般用来查询元数据的，是mysql中独有的。
	元数据：
		除了数据行之外的都是元数据，比如表结构，表名，列名。列属性等

	show databses; # 查看有多少数据库
	show tables; # 查看数据库中有多少表
	show tables from mysql; # 查询一个库下的所有表
	show grant for user@'%';  # 查看用户权限
	show create database mysql;  # 查询建库语句
	show create table mysql.user; # 查询建表语句
	show processlist;   # 查看数据库连接情况
	show charset; # 查看支持的字符集
	show collation; # 校验规则
	show variables； # 查询全部配置参数
	show variables like '%trx%';  # 查询部分配置参数
	show status\G; # 模糊查询数据库的状态信息
	show index from mysql.user; # 查询mysq.user的索引
	show engines; # 查询支持的存储引擎
	show engine innodb status \G; # 查看InnoDB引擎相关的状态信息
	show binary logs; # 查询所有的二进制日志
	show binlog events in ''; #  # 查询二进制日志事件
	show master status; # 查询数据库的日志位置信息
	show slave status \G  # 查询从库状态
	SHOW RELAYLOG EVENTS   # 查询从库relaylog事件信息
	desc  (show colums from city)  # 查询表的列定义信息

	全部show命令：
		1.help show;
		2.http://dev.mysql.com/doc/refman/5.7/en/show.html



查询information_schema库里面的‘TABLES’的结构信息,里面的行是整个数据库每张表的信息
    TABLE_SCHEMA    ---->表所在的库名
    TABLE_NAME      ---->表名
    ENGINE          ---->表的引擎
    TABLE_ROWS      ---->表的行数
    AVG_ROW_LENGTH  ---->表中行的平均行（字节）
    INDEX_LENGTH    ---->索引的占用空间大小（字节）
	
information_schema.TABLES常用查询
	-- 查询mysql中所有的库下的所有表名
		SELECT table_schema,table_name FROM information_schema.tables;

	-- 统计每个库下的表名以及个数
		SELECT table_schema,COUNT(table_name),GROUP_CONCAT(table_name)
		FROM information_schema.tables GROUP BY table_schema;

	-- 统计每个world库里面每张表的数据量
		SELECT table_name,CONCAT((TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)/1024,'kb') FROM information_schema.`TABLES` WHERE table_schema='world';

	-- 统计每个库中的表个数
		SELECT table_schema,COUNT(table_name)  
		FROM information_schema.tables GROUP BY table_schema;

	-- 查询核心业务下的表名(排除系统库)
		SELECT table_schema,COUNT(table_name),GROUP_CONCAT(table_name)
		FROM information_schema.tables WHERE table_schema NOT IN ('mysql','sys','performance_schema','information_schema ')
		GROUP BY table_schema;

	-- 查询核心业务下数据库的大小(排除系统库)
		SELECT table_schema,CONCAT(SUM(TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)/1024,'kb') AS total_szie
		FROM information_schema.TABLES
		WHERE table_schema NOT IN ('mysql','sys','performance_schema','information_schema ')
		GROUP BY table_schema;

	-- 批量生成全部表的数据库语句到bak.sql里面(排除系统库)
		SELECT CONCAT("mysqldump -uroot -p123 ",table_schema," ",table_name," >/tmp/",table_schema,"_",table_name,".sql" )
		FROM information_schema.TABLES
		WHERE table_schema NOT IN ('mysql','sys','performance_schema','information_schema ') INTO OUTFILE '/backup/bak.sh' ;

		-- 会报错：The MySQL server is running with the --secure-file-priv option so it cannot execute this statement
		-- mysql5.7之后的安全模式，可以在my.cnf里面添加secure-file-priv=/backup,指定允许上传的目录

	


如何了解业务？
	1.找到er图和数据字典关系(desc的信息)  第一天上班任务：将每张表上的列加上注释。可以连接业务详情。
	
mysql要学的
	数据库建模工具：
		https://blog.csdn.net/lianchangshuai/article/details/9991349
	pt-osc
		可以使用pt-osc工具(percona-toolkit online schema change)来进行在线变更。实现原理重点
		
	高级开发：
		子查询，存储过程，视图，函数，触发器，事件，游标等
	










































	
	
	

